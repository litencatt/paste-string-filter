const e={get:async e=>new Promise(((o,r)=>{chrome.storage.local.get(e,(e=>{void 0!==chrome.extension.lastError&&r(chrome.extension.lastError),o(e)}))})),set:e=>new Promise(((o,r)=>{chrome.storage.local.set(e,(()=>{void 0!==chrome.extension.lastError&&r(chrome.extension.lastError),o(!0)}))})),remove:e=>new Promise(((o,r)=>{chrome.storage.local.remove(e,(()=>{void 0!==chrome.extension.lastError&&r(chrome.extension.lastError),o(!0)}))})),clear:()=>new Promise(((e,o)=>{chrome.storage.local.clear((()=>{void 0!==chrome.extension.lastError&&o(chrome.extension.lastError),e(!0)}))}))},o={get:async e=>Promise.resolve().then((()=>{let o={};return null==e?Object.keys(localStorage).forEach((e=>{o[e]=localStorage.getItem(e)})):e.forEach((e=>{if("regexps"===e){let r=localStorage.getItem(e);null!=r&&(o[e]=JSON.parse(r))}else o[e]=localStorage.getItem(e)})),o})),set:async e=>Promise.resolve().then((()=>{Object.keys(e).forEach((o=>{localStorage.setItem(o,JSON.stringify(e[o]))}))}))};const r=window.location.href.includes("localhost")?o:e;export{r as s};
